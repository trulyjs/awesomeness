{
  "compilerOptions": {
    /* Basic Options */
    "target": "esnext",                    /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    "module": "commonjs",                  /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "lib": [],                             /* Specify library files to be included in the compilation. */
    "jsx": "preserve",                     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "declaration": true,                   /* Generates corresponding '.d.ts' file. */
    "sourceMap": true,                     /* Generates corresponding '.map' file. */
    "outDir": "./built/",                  /* Redirect output structure to the directory. */
    "rootDir": "./library/",                /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    "removeComments": true,                /* Do not emit comments to output. */
    "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
    "preserveConstEnums": true,            /* Do not erase const enum declarations in generated code. */
    /* Additional Checks */
    "noUnusedLocals": true,                /* Report errors on unused locals. */
    "noUnusedParameters": true,            /* Report errors on unused parameters. */
    "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */

    /* Module Resolution Options */
    "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "baseUrl": "./library/",                /* Base directory to resolve non-absolute module names. */
    "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    "typeRoots": [                         /* List of folders to include type definitions from. */
      "./node_modules/@types/"
    ],
    "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,               /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */

    /* Source Map Options */
    "sourceRoot": "./library",               /* Specify the location where debugger should locate TypeScript files instead of library locations. */
    "inlineSourceMap": false,               /* Emit a single file with library maps instead of having a separate file. */
    "inlineSources": false,                 /* Emit the library alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata": true         /* Enables experimental support for emitting type metadata for decorators. */
  },

  "include": [                             /* Included file paths for compilation */
    "./library/**/*"
  ],

  "exclude": [                             /* Excluded file paths from compilation */
    "node_modules",
    "**/*.spec.ts"
  ]
}
